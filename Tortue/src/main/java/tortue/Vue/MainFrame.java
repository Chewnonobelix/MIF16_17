/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tortue.Vue;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Event;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFrame;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import javax.swing.KeyStroke;
import tortue.Model.Dessin.ConcreteTortue;

/**
 *
 * @author Arnaud
 */
public class MainFrame extends JFrame
{
    ConcreteTortue m_courante;
    public static final Dimension VGAP = new Dimension(1, 5);
    public static final Dimension HGAP = new Dimension(5, 1);
    static private FeuilleDessin m_feuille;
    private JTextField inputValue;
    private Timer timer;/**
     * 
     * Creates new form MainFrame
     */
    public MainFrame() {
        super("un logo tout simple");
        initComponents();
        //logoInit();   
    }

    public MainFrame(ActionListener base, ActionListener avance)
    {
        super("un logo tout simple");
        initComponents();
        logoInit(base, avance);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    private void quitter() {
        System.exit(0);
    }

    void setTortueCourante(ConcreteTortue t) {
        m_courante = t;
    }

    static public FeuilleDessin getFeuille() 
    {
        return m_feuille;
    }

    static public void setFeuille(FeuilleDessin feuille) {
        m_feuille = feuille;
    }
    
   /* public void majDesListes(){
	
        for(int i = 0 ; i < feuille.getTortues().size(); i++){
            
            ArrayList<Tortue> listeTortuesAmie = new ArrayList(feuille.getTortues());
            ((TortueAmelioree)feuille.getTortue(i)).setM_listeTortueAmie(listeTortuesAmie);
            ((TortueAmelioree)feuille.getTortue(i)).removeTortueAmieI(i);
        }            
    }
    
     public void majDesListesBalle(){
	
        for(int i = 0 ; i < feuille.getTortues().size(); i++){
            
            ArrayList<Tortue> listeTortuesAmie = new ArrayList(feuille.getTortues());
            ((TortueBalle)feuille.getTortue(i)).setM_listeTortueAmie(listeTortuesAmie);
            ((TortueBalle)feuille.getTortue(i)).removeTortueAmieI(i);
        }            
    }*/

    
    public void logoInit(ActionListener base, ActionListener avance)
    {
        System.out.println("Logo init alpha beta");
        getContentPane().setLayout(new BorderLayout(10, 10));

        // Boutons
        JToolBar toolBar = new JToolBar();
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(toolBar);

        getContentPane().add(buttonPanel, "North");
        addButton(toolBar, "Creer", "Creer une tortue", null, base);
        addButton(toolBar, "Effacer", "Nouveau dessin", "/icons/New24.gif", base);

        toolBar.add(Box.createRigidArea(HGAP));
        inputValue = new JTextField("45", 5);
        toolBar.add(inputValue);
        addButton(toolBar, "Avancer", "Avancer 50", null, base);
        addButton(toolBar, "Droite", "Droite 45", null, base);
        addButton(toolBar, "Gauche", "Gauche 45", null, base);
        addButton(toolBar, "Lever", "Lever Crayon", null, base);
        addButton(toolBar, "Baisser", "Baisser Crayon", null, base);
        addButton(toolBar, "Nom", "Afficher Nom Tortue", null, base);
        addButton(toolBar, "Changer", "Changer de tortue", null, base);

        String[] colorStrings = {"noir", "bleu", "cyan", "gris fonce", "rouge",
            "vert", "gris clair", "magenta", "orange",
            "gris", "rose", "jaune"};

        // Create the combo box
        toolBar.add(Box.createRigidArea(HGAP));
        JLabel colorLabel = new JLabel("   Couleur: ");
        toolBar.add(colorLabel);
        JComboBox colorList = new JComboBox(colorStrings);
        toolBar.add(colorList);

        colorList.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                JComboBox cb = (JComboBox) e.getSource();
                int n = cb.getSelectedIndex();
                //m_courante.setColor(n);
            }
        });

        // Menus
        JMenuBar menubar = new JMenuBar();
        setJMenuBar(menubar);	// on installe le menu bar
        JMenu menuFile = new JMenu("File"); // on installe le premier menu
        menubar.add(menuFile);

        addMenuItem(menuFile, "Effacer", "Effacer", KeyEvent.VK_N);
        addMenuItem(menuFile, "Quitter", "Quitter", KeyEvent.VK_Q);

        JMenu menuCommandes = new JMenu("Commandes"); // on installe le premier menu
        menubar.add(menuCommandes);
        addMenuItem(menuCommandes, "Avancer", "Avancer", -1);
        addMenuItem(menuCommandes, "Droite", "Droite", -1);
        addMenuItem(menuCommandes, "Gauche", "Gauche", -1);
        addMenuItem(menuCommandes, "Lever Crayon", "Lever", -1);
        addMenuItem(menuCommandes, "Baisser Crayon", "Baisser", -1);

        JMenu menuHelp = new JMenu("Aide"); // on installe le premier menu
        menubar.add(menuHelp);
        addMenuItem(menuHelp, "Aide", "Help", -1);
        addMenuItem(menuHelp, "A propos", "About", -1);

        setDefaultCloseOperation(EXIT_ON_CLOSE);

        // les boutons du bas
        JPanel p2 = new JPanel(new GridLayout());
        JButton b20 = new JButton("Proc1");
        p2.add(b20);
        b20.addActionListener(avance);
        JButton b21 = new JButton("Proc2");
        p2.add(b21);
        b21.addActionListener(avance);
        JButton b22 = new JButton("Proc3");
        p2.add(b22);
        b22.addActionListener(avance);
        JButton b23 = new JButton("Proc4");
        p2.add(b23);
        b23.addActionListener(avance);
        JButton b24 = new JButton("Proc5");
        p2.add(b24);
        b24.addActionListener(avance);
        JButton b25 = new JButton("Proc6");
        p2.add(b25);
        b25.addActionListener(avance);
        JButton b26 = new JButton("Proc7");
        p2.add(b26);
        b26.addActionListener(avance);
        JButton b27 = new JButton("Proc8");
        p2.add(b27);
        b27.addActionListener(avance);


        getContentPane().add(p2, "South");

        m_feuille = new FeuilleDessin(); //500, 400);
        m_feuille.setBackground(Color.white);
        m_feuille.setSize(new Dimension(600, 400));
        m_feuille.setPreferredSize(new Dimension(600, 400));

        getContentPane().add(m_feuille, "Center");

        pack();
        setVisible(true);
    }

   
   public void creerTortueBouton() {

        /*courante = new TortueAmelioree("");

        feuille.addTortue(courante);

        courante.setPosition(500 / 2, 400 / 2);

        FenetreNom fenetre = new FenetreNom(courante);

        fenetre.setVisible(true);*/

    }
   
   public void changerTortueBouton(){
       
       
       /*int position = feuille.getTortues().indexOf(courante);
       
       
       if(position == feuille.getTortues().size() - 1)
           courante = feuille.getTortues().get(0);
       else courante = feuille.getTortues().get(position + 1);*/
    }

    public String getInputValue() {
        String s = inputValue.getText();
        return (s);
    }

    /**
     * la gestion des actions des boutons
     */
    
    
    // efface tout et reinitialise la feuille

    public void effacer() {

        /*timer.cancel();
        feuille.reset();
        feuille.repaint();
        

        // Replace la tortue au centre
        Dimension size = feuille.getSize();
        courante.setPosition(size.width / 2, size.height / 2);*/
    }

    //utilitaires pour installer des boutons et des menus
    public void addButton(JComponent p, String name, String tooltiptext, String imageName, ActionListener l) {
        JButton b;
        if ((imageName == null) || (imageName.equals(""))) {
            b = (JButton) p.add(new JButton(name));
        } else {
            java.net.URL u = this.getClass().getResource(imageName);
            if (u != null) {
                ImageIcon im = new ImageIcon(u);
                b = (JButton) p.add(new JButton(im));
            } else {
                b = (JButton) p.add(new JButton(name));
            }
            b.setActionCommand(name);
        }

        b.setToolTipText(tooltiptext);
        b.setBorder(BorderFactory.createRaisedBevelBorder());
        b.setMargin(new Insets(0, 0, 0, 0));
        b.addActionListener(l);
    }

    public void addMenuItem(JMenu m, String label, String command, int key) {
        JMenuItem menuItem;
        menuItem = new JMenuItem(label);
        m.add(menuItem);

        menuItem.setActionCommand(command);
        //menuItem.addActionListener(this);
        if (key > 0) {
            if (key != KeyEvent.VK_DELETE) {
                menuItem.setAccelerator(KeyStroke.getKeyStroke(key, Event.CTRL_MASK, false));
            } else {
                menuItem.setAccelerator(KeyStroke.getKeyStroke(key, 0, false));
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
